// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/calculatorpb/calculator.proto

package calculatorpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// sum request and response
type SumRequest struct {
	FirstNumber          int32    `protobuf:"varint,1,opt,name=first_number,json=firstNumber,proto3" json:"first_number,omitempty"`
	SecondNumber         int32    `protobuf:"varint,2,opt,name=second_number,json=secondNumber,proto3" json:"second_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{0}
}

func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (m *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(m, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetFirstNumber() int32 {
	if m != nil {
		return m.FirstNumber
	}
	return 0
}

func (m *SumRequest) GetSecondNumber() int32 {
	if m != nil {
		return m.SecondNumber
	}
	return 0
}

type SumResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{1}
}

func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (m *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(m, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

// div request and response
type DivRequest struct {
	FirstNumber          int32    `protobuf:"varint,1,opt,name=first_number,json=firstNumber,proto3" json:"first_number,omitempty"`
	SecondNumber         int32    `protobuf:"varint,2,opt,name=second_number,json=secondNumber,proto3" json:"second_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DivRequest) Reset()         { *m = DivRequest{} }
func (m *DivRequest) String() string { return proto.CompactTextString(m) }
func (*DivRequest) ProtoMessage()    {}
func (*DivRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{2}
}

func (m *DivRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DivRequest.Unmarshal(m, b)
}
func (m *DivRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DivRequest.Marshal(b, m, deterministic)
}
func (m *DivRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DivRequest.Merge(m, src)
}
func (m *DivRequest) XXX_Size() int {
	return xxx_messageInfo_DivRequest.Size(m)
}
func (m *DivRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DivRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DivRequest proto.InternalMessageInfo

func (m *DivRequest) GetFirstNumber() int32 {
	if m != nil {
		return m.FirstNumber
	}
	return 0
}

func (m *DivRequest) GetSecondNumber() int32 {
	if m != nil {
		return m.SecondNumber
	}
	return 0
}

type DivResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DivResponse) Reset()         { *m = DivResponse{} }
func (m *DivResponse) String() string { return proto.CompactTextString(m) }
func (*DivResponse) ProtoMessage()    {}
func (*DivResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{3}
}

func (m *DivResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DivResponse.Unmarshal(m, b)
}
func (m *DivResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DivResponse.Marshal(b, m, deterministic)
}
func (m *DivResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DivResponse.Merge(m, src)
}
func (m *DivResponse) XXX_Size() int {
	return xxx_messageInfo_DivResponse.Size(m)
}
func (m *DivResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DivResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DivResponse proto.InternalMessageInfo

func (m *DivResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

// multiply request and response
type MultiplyRequest struct {
	FirstNumber          int32    `protobuf:"varint,1,opt,name=first_number,json=firstNumber,proto3" json:"first_number,omitempty"`
	SecondNumber         int32    `protobuf:"varint,2,opt,name=second_number,json=secondNumber,proto3" json:"second_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultiplyRequest) Reset()         { *m = MultiplyRequest{} }
func (m *MultiplyRequest) String() string { return proto.CompactTextString(m) }
func (*MultiplyRequest) ProtoMessage()    {}
func (*MultiplyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{4}
}

func (m *MultiplyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiplyRequest.Unmarshal(m, b)
}
func (m *MultiplyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiplyRequest.Marshal(b, m, deterministic)
}
func (m *MultiplyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiplyRequest.Merge(m, src)
}
func (m *MultiplyRequest) XXX_Size() int {
	return xxx_messageInfo_MultiplyRequest.Size(m)
}
func (m *MultiplyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiplyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MultiplyRequest proto.InternalMessageInfo

func (m *MultiplyRequest) GetFirstNumber() int32 {
	if m != nil {
		return m.FirstNumber
	}
	return 0
}

func (m *MultiplyRequest) GetSecondNumber() int32 {
	if m != nil {
		return m.SecondNumber
	}
	return 0
}

type MultiplyResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultiplyResponse) Reset()         { *m = MultiplyResponse{} }
func (m *MultiplyResponse) String() string { return proto.CompactTextString(m) }
func (*MultiplyResponse) ProtoMessage()    {}
func (*MultiplyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{5}
}

func (m *MultiplyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiplyResponse.Unmarshal(m, b)
}
func (m *MultiplyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiplyResponse.Marshal(b, m, deterministic)
}
func (m *MultiplyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiplyResponse.Merge(m, src)
}
func (m *MultiplyResponse) XXX_Size() int {
	return xxx_messageInfo_MultiplyResponse.Size(m)
}
func (m *MultiplyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiplyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MultiplyResponse proto.InternalMessageInfo

func (m *MultiplyResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

// sub request and response
type SubRequest struct {
	FirstNumber          int32    `protobuf:"varint,1,opt,name=first_number,json=firstNumber,proto3" json:"first_number,omitempty"`
	SecondNumber         int32    `protobuf:"varint,2,opt,name=second_number,json=secondNumber,proto3" json:"second_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubRequest) Reset()         { *m = SubRequest{} }
func (m *SubRequest) String() string { return proto.CompactTextString(m) }
func (*SubRequest) ProtoMessage()    {}
func (*SubRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{6}
}

func (m *SubRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubRequest.Unmarshal(m, b)
}
func (m *SubRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubRequest.Marshal(b, m, deterministic)
}
func (m *SubRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubRequest.Merge(m, src)
}
func (m *SubRequest) XXX_Size() int {
	return xxx_messageInfo_SubRequest.Size(m)
}
func (m *SubRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubRequest proto.InternalMessageInfo

func (m *SubRequest) GetFirstNumber() int32 {
	if m != nil {
		return m.FirstNumber
	}
	return 0
}

func (m *SubRequest) GetSecondNumber() int32 {
	if m != nil {
		return m.SecondNumber
	}
	return 0
}

type SubResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubResponse) Reset()         { *m = SubResponse{} }
func (m *SubResponse) String() string { return proto.CompactTextString(m) }
func (*SubResponse) ProtoMessage()    {}
func (*SubResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{7}
}

func (m *SubResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubResponse.Unmarshal(m, b)
}
func (m *SubResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubResponse.Marshal(b, m, deterministic)
}
func (m *SubResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubResponse.Merge(m, src)
}
func (m *SubResponse) XXX_Size() int {
	return xxx_messageInfo_SubResponse.Size(m)
}
func (m *SubResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubResponse proto.InternalMessageInfo

func (m *SubResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type PrimeNumberCompositionRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeNumberCompositionRequest) Reset()         { *m = PrimeNumberCompositionRequest{} }
func (m *PrimeNumberCompositionRequest) String() string { return proto.CompactTextString(m) }
func (*PrimeNumberCompositionRequest) ProtoMessage()    {}
func (*PrimeNumberCompositionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{8}
}

func (m *PrimeNumberCompositionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeNumberCompositionRequest.Unmarshal(m, b)
}
func (m *PrimeNumberCompositionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeNumberCompositionRequest.Marshal(b, m, deterministic)
}
func (m *PrimeNumberCompositionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeNumberCompositionRequest.Merge(m, src)
}
func (m *PrimeNumberCompositionRequest) XXX_Size() int {
	return xxx_messageInfo_PrimeNumberCompositionRequest.Size(m)
}
func (m *PrimeNumberCompositionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeNumberCompositionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeNumberCompositionRequest proto.InternalMessageInfo

func (m *PrimeNumberCompositionRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type PrimeNumberCompositionResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeNumberCompositionResponse) Reset()         { *m = PrimeNumberCompositionResponse{} }
func (m *PrimeNumberCompositionResponse) String() string { return proto.CompactTextString(m) }
func (*PrimeNumberCompositionResponse) ProtoMessage()    {}
func (*PrimeNumberCompositionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{9}
}

func (m *PrimeNumberCompositionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeNumberCompositionResponse.Unmarshal(m, b)
}
func (m *PrimeNumberCompositionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeNumberCompositionResponse.Marshal(b, m, deterministic)
}
func (m *PrimeNumberCompositionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeNumberCompositionResponse.Merge(m, src)
}
func (m *PrimeNumberCompositionResponse) XXX_Size() int {
	return xxx_messageInfo_PrimeNumberCompositionResponse.Size(m)
}
func (m *PrimeNumberCompositionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeNumberCompositionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeNumberCompositionResponse proto.InternalMessageInfo

func (m *PrimeNumberCompositionResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "calculator.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "calculator.SumResponse")
	proto.RegisterType((*DivRequest)(nil), "calculator.DivRequest")
	proto.RegisterType((*DivResponse)(nil), "calculator.DivResponse")
	proto.RegisterType((*MultiplyRequest)(nil), "calculator.MultiplyRequest")
	proto.RegisterType((*MultiplyResponse)(nil), "calculator.MultiplyResponse")
	proto.RegisterType((*SubRequest)(nil), "calculator.SubRequest")
	proto.RegisterType((*SubResponse)(nil), "calculator.SubResponse")
	proto.RegisterType((*PrimeNumberCompositionRequest)(nil), "calculator.PrimeNumberCompositionRequest")
	proto.RegisterType((*PrimeNumberCompositionResponse)(nil), "calculator.PrimeNumberCompositionResponse")
}

func init() {
	proto.RegisterFile("calculator/calculatorpb/calculator.proto", fileDescriptor_7f42938f8c8365cf)
}

var fileDescriptor_7f42938f8c8365cf = []byte{
	// 336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0x4d, 0x4b, 0xc3, 0x40,
	0x14, 0x6c, 0x2a, 0x06, 0x79, 0x8d, 0x5a, 0xf6, 0x10, 0x25, 0x7e, 0xa0, 0x11, 0xa1, 0xf6, 0x50,
	0x45, 0x0f, 0xf6, 0x6c, 0x0b, 0x9e, 0x14, 0x69, 0xbc, 0xe8, 0x45, 0xba, 0x71, 0x85, 0x85, 0x24,
	0x1b, 0xf7, 0x23, 0xe0, 0x9f, 0x17, 0xe9, 0x26, 0x21, 0x9b, 0xda, 0x36, 0x1e, 0xec, 0x2d, 0x3b,
	0x99, 0x79, 0x33, 0xec, 0x1b, 0x16, 0x7a, 0xe1, 0x34, 0x0a, 0x55, 0x34, 0x95, 0x8c, 0x5f, 0x56,
	0x9f, 0x29, 0x36, 0x0e, 0x83, 0x94, 0x33, 0xc9, 0x10, 0x54, 0x88, 0xff, 0x0c, 0x10, 0xa8, 0x78,
	0x42, 0x3e, 0x15, 0x11, 0x12, 0x9d, 0x82, 0xf3, 0x41, 0xb9, 0x90, 0x6f, 0x89, 0x8a, 0x31, 0xe1,
	0xfb, 0xd6, 0x89, 0xd5, 0xdb, 0x9c, 0x74, 0x34, 0xf6, 0xa8, 0x21, 0x74, 0x06, 0xdb, 0x82, 0x84,
	0x2c, 0x79, 0x2f, 0x39, 0x6d, 0xcd, 0x71, 0x72, 0x30, 0x27, 0xf9, 0xe7, 0xd0, 0xd1, 0x53, 0x45,
	0xca, 0x12, 0x41, 0x90, 0x0b, 0x36, 0x27, 0x42, 0x45, 0xb2, 0x18, 0x58, 0x9c, 0x66, 0xe6, 0x63,
	0x9a, 0xad, 0xc1, 0x5c, 0x4f, 0x6d, 0x30, 0x7f, 0x81, 0xdd, 0x07, 0x15, 0x49, 0x9a, 0x46, 0x5f,
	0xff, 0x9d, 0xa0, 0x0f, 0xdd, 0x6a, 0x74, 0xf3, 0x1d, 0x04, 0x0a, 0xaf, 0x65, 0x01, 0xb8, 0xd1,
	0xfc, 0x16, 0x8e, 0x9e, 0x38, 0x8d, 0x49, 0xae, 0x1a, 0xb1, 0x38, 0x65, 0x82, 0x4a, 0xca, 0x92,
	0x32, 0x8f, 0x0b, 0x76, 0x2d, 0x49, 0x71, 0xf2, 0x87, 0x70, 0xbc, 0x4c, 0xb8, 0xda, 0xf2, 0xfa,
	0xbb, 0x0d, 0xdd, 0x51, 0xd1, 0x3f, 0x12, 0x10, 0x9e, 0xd1, 0x90, 0xa0, 0x21, 0x6c, 0x04, 0x2a,
	0x46, 0xee, 0xc0, 0xe8, 0x6a, 0x55, 0x4b, 0x6f, 0xef, 0x17, 0x9e, 0x9b, 0xf8, 0xad, 0x99, 0x72,
	0x4c, 0xb3, 0xba, 0xb2, 0xea, 0x54, 0x5d, 0x69, 0xb4, 0xc2, 0x6f, 0xa1, 0x7b, 0xd8, 0x2a, 0x97,
	0x84, 0x0e, 0x4c, 0xda, 0x5c, 0x2b, 0xbc, 0xc3, 0xc5, 0x3f, 0xcd, 0x08, 0x81, 0xc2, 0xf3, 0xe1,
	0xf1, 0x92, 0xf0, 0xd8, 0x50, 0x0a, 0x70, 0x17, 0xdf, 0x22, 0xba, 0x30, 0x45, 0x2b, 0x57, 0xe4,
	0xf5, 0xff, 0x42, 0x2d, 0x2d, 0xaf, 0xac, 0xbb, 0x9d, 0x57, 0xc7, 0x7c, 0x1e, 0xb0, 0xad, 0x1f,
	0x85, 0x9b, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7e, 0x6d, 0x06, 0x21, 0x40, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalculateServiceClient is the client API for CalculateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculateServiceClient interface {
	// unary rpc services
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
	Div(ctx context.Context, in *DivRequest, opts ...grpc.CallOption) (*DivResponse, error)
	Multiply(ctx context.Context, in *MultiplyRequest, opts ...grpc.CallOption) (*MultiplyResponse, error)
	Sub(ctx context.Context, in *SubRequest, opts ...grpc.CallOption) (*SubResponse, error)
	// server streaming rpc services
	PrimeNumberComposition(ctx context.Context, in *PrimeNumberCompositionRequest, opts ...grpc.CallOption) (CalculateService_PrimeNumberCompositionClient, error)
}

type calculateServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalculateServiceClient(cc *grpc.ClientConn) CalculateServiceClient {
	return &calculateServiceClient{cc}
}

func (c *calculateServiceClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculateService/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculateServiceClient) Div(ctx context.Context, in *DivRequest, opts ...grpc.CallOption) (*DivResponse, error) {
	out := new(DivResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculateService/Div", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculateServiceClient) Multiply(ctx context.Context, in *MultiplyRequest, opts ...grpc.CallOption) (*MultiplyResponse, error) {
	out := new(MultiplyResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculateService/Multiply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculateServiceClient) Sub(ctx context.Context, in *SubRequest, opts ...grpc.CallOption) (*SubResponse, error) {
	out := new(SubResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculateService/Sub", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculateServiceClient) PrimeNumberComposition(ctx context.Context, in *PrimeNumberCompositionRequest, opts ...grpc.CallOption) (CalculateService_PrimeNumberCompositionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculateService_serviceDesc.Streams[0], "/calculator.CalculateService/PrimeNumberComposition", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculateServicePrimeNumberCompositionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CalculateService_PrimeNumberCompositionClient interface {
	Recv() (*PrimeNumberCompositionResponse, error)
	grpc.ClientStream
}

type calculateServicePrimeNumberCompositionClient struct {
	grpc.ClientStream
}

func (x *calculateServicePrimeNumberCompositionClient) Recv() (*PrimeNumberCompositionResponse, error) {
	m := new(PrimeNumberCompositionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CalculateServiceServer is the server API for CalculateService service.
type CalculateServiceServer interface {
	// unary rpc services
	Sum(context.Context, *SumRequest) (*SumResponse, error)
	Div(context.Context, *DivRequest) (*DivResponse, error)
	Multiply(context.Context, *MultiplyRequest) (*MultiplyResponse, error)
	Sub(context.Context, *SubRequest) (*SubResponse, error)
	// server streaming rpc services
	PrimeNumberComposition(*PrimeNumberCompositionRequest, CalculateService_PrimeNumberCompositionServer) error
}

// UnimplementedCalculateServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalculateServiceServer struct {
}

func (*UnimplementedCalculateServiceServer) Sum(ctx context.Context, req *SumRequest) (*SumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedCalculateServiceServer) Div(ctx context.Context, req *DivRequest) (*DivResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Div not implemented")
}
func (*UnimplementedCalculateServiceServer) Multiply(ctx context.Context, req *MultiplyRequest) (*MultiplyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Multiply not implemented")
}
func (*UnimplementedCalculateServiceServer) Sub(ctx context.Context, req *SubRequest) (*SubResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sub not implemented")
}
func (*UnimplementedCalculateServiceServer) PrimeNumberComposition(req *PrimeNumberCompositionRequest, srv CalculateService_PrimeNumberCompositionServer) error {
	return status.Errorf(codes.Unimplemented, "method PrimeNumberComposition not implemented")
}

func RegisterCalculateServiceServer(s *grpc.Server, srv CalculateServiceServer) {
	s.RegisterService(&_CalculateService_serviceDesc, srv)
}

func _CalculateService_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculateServiceServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculateService/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculateServiceServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculateService_Div_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DivRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculateServiceServer).Div(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculateService/Div",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculateServiceServer).Div(ctx, req.(*DivRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculateService_Multiply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultiplyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculateServiceServer).Multiply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculateService/Multiply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculateServiceServer).Multiply(ctx, req.(*MultiplyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculateService_Sub_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculateServiceServer).Sub(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculateService/Sub",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculateServiceServer).Sub(ctx, req.(*SubRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculateService_PrimeNumberComposition_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeNumberCompositionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalculateServiceServer).PrimeNumberComposition(m, &calculateServicePrimeNumberCompositionServer{stream})
}

type CalculateService_PrimeNumberCompositionServer interface {
	Send(*PrimeNumberCompositionResponse) error
	grpc.ServerStream
}

type calculateServicePrimeNumberCompositionServer struct {
	grpc.ServerStream
}

func (x *calculateServicePrimeNumberCompositionServer) Send(m *PrimeNumberCompositionResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _CalculateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.CalculateService",
	HandlerType: (*CalculateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _CalculateService_Sum_Handler,
		},
		{
			MethodName: "Div",
			Handler:    _CalculateService_Div_Handler,
		},
		{
			MethodName: "Multiply",
			Handler:    _CalculateService_Multiply_Handler,
		},
		{
			MethodName: "Sub",
			Handler:    _CalculateService_Sub_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrimeNumberComposition",
			Handler:       _CalculateService_PrimeNumberComposition_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "calculator/calculatorpb/calculator.proto",
}
